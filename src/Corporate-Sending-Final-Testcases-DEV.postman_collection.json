{
	"info": {
		"_postman_id": "550af7ea-b50a-4de0-b81c-fab68387cbfe",
		"name": "Corporate-Sending-Final-Testcases-DEV",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "APIGW-GRAPHQL",
			"item": [
				{
					"name": "DIrect AUTH using Curl-Get Role and Access Tooken-DevENV",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "058cf00d-7e54-496b-ae3d-56bf2dbebe48",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"",
									"pm.environment.set(\"access_token\",  jsonData.access_token);",
									"pm.environment.set(\"id_token\",  jsonData.id_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"pm.environment.set(\"role_tokens\", jsonData.role_tokens.FI28768767);",
									"",
									"pm.test(\"Response time should be  less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(3500);",
									"});",
									"",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"  ",
									"   "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{AUTH_URL}}/api/v1/token?grant_type=password&username={{email}}&password={{PWD}}",
							"host": [
								"{{AUTH_URL}}"
							],
							"path": [
								"api",
								"v1",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "password"
								},
								{
									"key": "username",
									"value": "{{email}}"
								},
								{
									"key": "password",
									"value": "{{PWD}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logistic-contract Number-list-Options-Query-APIG",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6df5e53f-b3ac-4532-ad90-12237a70af0c",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"//************************************************************* */",
									"var template = `",
									"    <style type=\"text/css\">",
									"        .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
									"        .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
									"        .tftable tr {background-color:#ffffff;}",
									"        .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
									"        .tftable tr:hover {background-color:#e0ffff;}",
									"    </style>",
									"    ",
									"    <table class=\"tftable\" border=\"1\">",
									"        <tr>",
									"            <th>Name</th>",
									"            <th>Email</th>",
									"        </tr>",
									"        ",
									"        {{#each response.data.contacts}}",
									"            <tr id=row_{{@key}} onClick=\"handleClick(this.id)\">",
									"                <td id={{@key}}>{{name}}</td>",
									"                <td>{{email}}</td>",
									"            </tr>",
									"        {{/each}}",
									"    </table>",
									"`;",
									"",
									"pm.visualizer.set(template, {",
									"    response: pm.response.json()",
									"});",
									"",
									"// Access the response data JSON as a JavaScript object",
									"const res = pm.response.json();",
									"",
									"// -----------------------------",
									"// - Structure data for charts -",
									"// -----------------------------",
									"",
									"// EDIT THIS OBJECT TO BIND YOUR DATA",
									"const vizData = {",
									"",
									"    // Labels take an array of strings",
									"    labels: res.data.labels,",
									"",
									"    // Data takes an array of numbers",
									"    data: res.data.data",
									"};",
									"",
									"// ------------",
									"// - Template -",
									"// ------------",
									"",
									"// Configure the template",
									"var template = `",
									"<canvas id=\"myChart\" height=\"75\"></canvas>",
									"",
									"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script> ",
									"",
									"<script>",
									"    // Get DOM element to render the chart in",
									"    var ctx = document.getElementById(\"myChart\");",
									"",
									"    // Configure Chart JS here.",
									"    // You can customize the options passed to this constructor to",
									"    // make the chart look and behave the way you want",
									"    var myChart = new Chart(ctx, {",
									"        type: \"bar\",",
									"        data: {",
									"            labels: [], // We will update this later in pm.getData()",
									"            datasets: [{",
									"                data: [], // We will update this later in pm.getData()",
									"                ",
									"                // Change these colours to customize the chart",
									"                backgroundColor: [\"#003f5c\", \"#58508d\", \"#bc5090\", \"#ff6361\", \"#ffa600\"],",
									"            }]",
									"        },",
									"        options: {",
									"            legend: { display: false },",
									"            title: {",
									"                display: true,",
									"                text: 'Count'",
									"            },",
									"            scales: {",
									"                xAxes: [{",
									"                    display: true,",
									"                    scaleLabel: {",
									"                        display: true,",
									"                        labelString: 'Items'",
									"                    }",
									"                }],",
									"                yAxes: [{",
									"                    display: true,",
									"                    scaleLabel: {",
									"                        display: true,",
									"                        labelString: 'Count'",
									"                    }",
									"                }]",
									"            }",
									"        }",
									"",
									"    });",
									"",
									"    // Access the data passed to pm.visualizer.set() from the JavaScript",
									"    // code of the Visualizer template",
									"    pm.getData(function (err, value) {",
									"        myChart.data.datasets[0].data = value.data;",
									"        myChart.data.labels = value.labels;",
									"        myChart.update();",
									"    });",
									"",
									"</script>`;",
									"",
									"// -------------------------",
									"// - Bind data to template -",
									"// -------------------------",
									"",
									"// Set the visualizer template",
									"pm.visualizer.set(template, vizData);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{userinfo {organization {name businessId logisticsContracts {name contractNumber}}}}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place  shipment Order-APIG -Normal-Small",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cc7ec79-7072-4940-bc4c-3ae9e5ae49c2",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"tracking_code\", jsonData.data.placeShipmentOrder.trackingCode);",
									"pm.environment.set(\"tracking_code_small\", jsonData.data.placeShipmentOrder.trackingCode);",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  placeShipmentOrder(\r\n    shipmentOrder: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n        logisticsContractNumber: \"602751\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CONSUMER\r\n        phoneNumber: \"+358123\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n      shippingProductId: \"c77f57ea-b852-5717-8f48-8ef3d3caff0e\"\r\n      deliveryMethod: {\r\n        \r\n      }\r\n      additionalServices: []\r\n      returnLabel: false\r\n      additionalInfo: \"Here is more information\"\r\n      infoCode: \"1234\"\r\n    }\r\n  ) {\r\n    trackingCode\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place  shipment Order-APIG -Fright-DangerousGoods",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "333e39dc-475f-4aed-9b31-ae093928d1fa",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.environment.set(\"Frightreference\", jsonData.data.placeFreightShipmentOrder.reference);",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  placeFreightShipmentOrder(\r\n    freightShipmentOrder: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        logisticsContractNumber: \"613601\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CONSUMER\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n      shippingProductId: \"39729232-15b3-4ca3-91c4-cac2e9acd319\"\r\n      shippingUnits: [\r\n        {\r\n          shippingUnitTypeCode: \"ZPX\"\r\n          count: 1\r\n          width: 80\r\n          length: 120\r\n          height: 100\r\n          weight: 90\r\n          contents: \"Pultteja ja muttereita\"\r\n          noStacking: true\r\n          dangerousGoodsItems: [\r\n            {\r\n              shippingName: \"Vaarallista\"\r\n              primaryHazardClass: \"3.1\"\r\n              environmentalHazard: true\r\n              weight: 10\r\n              technicalName: \"Dangerous\"\r\n              type: VAK\r\n              count: 1\r\n              unNumber: \"0123\"\r\n              packagingType: \"Muovipussi\"\r\n              volume: 20\r\n              secondaryHazardClasses: [\"1.4S\", \"8\"]\r\n              packagingGroupCode: \"II\"\r\n              tunnelRestrictionCode: \"B/D\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n      additionalServices: [{ id: \"3147\" }]\r\n      shippingInstructions: \"Kuljeta heti.\"\r\n      additionalInstructions: \"Lisää tietoa.\"\r\n      requestedPickupDate: \"2019-12-12T07:00:00Z\"\r\n    }\r\n  ) {\r\n    reference\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query shipment-with-Tracking-SmallParcel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5ef26ac-f6e6-419f-8f73-de0bd9d24385",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query {\r\n  shipmentOrder(trackingCode: \"{{tracking_code_small}}\") {\r\n    trackingCode\r\n    order {\r\n      sender {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      receiver {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      deliveryMethod {\r\n        pickupPoint {\r\n          pupCode\r\n        }\r\n        homeDelivery\r\n        mailbox\r\n        postOffice\r\n      }\r\n      additionalServices {\r\n        id\r\n        params {\r\n          cashOnDelivery {\r\n            IBAN\r\n            BIC\r\n            amount\r\n            reference\r\n          }\r\n        }\r\n      }\r\n      specifiedSize {\r\n        height\r\n        length\r\n        weight\r\n        width\r\n      }\r\n      additionalInfo\r\n      infoCode\r\n      returnLabel\r\n      shippingProductId\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place  shipment Order-APIG -Normal-Med-PP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b61733c0-5b0e-4301-9556-5d8928f3d338",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"tracking_code_med\", jsonData.data.placeShipmentOrder.trackingCode);",
									"//pm.environment.set(\"reference\" , jsonData.data.placeShipmentOrder.reference);",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n  placeShipmentOrder(\r\n    shipmentOrder: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n        logisticsContractNumber: \"602751\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CONSUMER\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n      shippingProductId: \"72ff6a7c-5aaf-5761-823e-27befe599c3c\"\r\n      deliveryMethod: {\r\n        \r\n      }\r\n      additionalServices: [\r\n         {\r\n          id: \"3101\"\r\n          params: {\r\n            cashOnDelivery: {\r\n              amount: 100\r\n              IBAN: \"GB33BUKB20201555555555\"\r\n              BIC: \"OKOYFIHH\"\r\n              name: \"Testi vastaanottaja\"\r\n              reference: \"123456\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n      returnLabel: false\r\n      additionalInfo: \"Here is more information\"\r\n      infoCode: \"1234\"\r\n    }\r\n  ) {\r\n    trackingCode\r\n  }\r\n}",
								"variables": ""
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place  shipment Order-APIG -Normal-Med-HD",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c09f23fc-6d74-45a6-8382-03921b40a9ea",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"tracking_code_med\", jsonData.data.placeShipmentOrder.trackingCode);",
									"//pm.environment.set(\"reference\" , jsonData.data.placeShipmentOrder.reference);",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  placeShipmentOrder(\r\n    shipmentOrder: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n        logisticsContractNumber: \"602751\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CONSUMER\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n      shippingProductId: \"8cae2d2d-99cd-54c6-a70e-b47431793543\"\r\n      deliveryMethod: {\r\n        \r\n      }\r\n      additionalServices: [\r\n         {\r\n          id: \"3101\"\r\n          params: {\r\n            cashOnDelivery: {\r\n              amount: 100\r\n              IBAN: \"GB33BUKB20201555555555\"\r\n              BIC: \"OKOYFIHH\"\r\n              name: \"Testi vastaanottaja\"\r\n              reference: \"123456\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n      returnLabel: false\r\n      additionalInfo: \"Here is more information\"\r\n      infoCode: \"1234\"\r\n    }\r\n  ) {\r\n    trackingCode\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query shipment-with-Tracking-MediumParcel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d4c7f30-dd03-49bd-a9ce-ef14695d8972",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query {\r\n  shipmentOrder(trackingCode: \"{{tracking_code_med}}\") {\r\n    trackingCode\r\n    order {\r\n      sender {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      receiver {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      deliveryMethod {\r\n        pickupPoint {\r\n          pupCode\r\n        }\r\n        homeDelivery\r\n        mailbox\r\n        postOffice\r\n      }\r\n      additionalServices {\r\n        id\r\n        params {\r\n          cashOnDelivery {\r\n            IBAN\r\n            BIC\r\n            amount\r\n            reference\r\n          }\r\n        }\r\n      }\r\n      specifiedSize {\r\n        height\r\n        length\r\n        weight\r\n        width\r\n      }\r\n      additionalInfo\r\n      infoCode\r\n      returnLabel\r\n      shippingProductId\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Plshipment Order-APIG-Large-Expressrahti",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8adf5629-cdf3-4182-a013-c65a29ba2932",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"tracking_code\", jsonData.data.placeShipmentOrder.trackingCode);",
									"//pm.environment.set(\"reference\" , jsonData.data.placeShipmentOrder.reference);",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"value": "{{role_tokens}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  placeShipmentOrder(\r\n    shipmentOrder: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n        logisticsContractNumber: \"613601\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n      shippingProductId: \"902505dc-3409-5cc1-ab73-33fa80585fcd\"\r\n      deliveryMethod: { homeDelivery: true }\r\n      additionalServices: []\r\n      returnLabel: false\r\n      additionalInfo: \"Here is more information\"\r\n      infoCode: \"12345678\"\r\n      shippingUnitTypeCode: \"ZPF\"\r\n    }\r\n  ) {\r\n    trackingCode\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Plshipment Order-APIG-FrightShipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "340fea4b-2527-4c52-a5ea-78dcc457b8bf",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"Frightreference\", jsonData.data.placeFreightShipmentOrder.reference);",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"//pm.environment.set(\"tracking_code_lar\", jsonData.data.placeShipmentOrder.trackingCode);",
									"pm.environment.set(\"reference\" , jsonData.data.placeFreightShipmentOrder.reference);",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"value": "{{role_tokens}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  placeFreightShipmentOrder(\r\n    freightShipmentOrder: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        logisticsContractNumber: \"613601\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CONSUMER\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n      shippingProductId: \"39729232-15b3-4ca3-91c4-cac2e9acd319\"\r\n      shippingUnits: [\r\n        {\r\n          shippingUnitTypeCode: \"ZPX\"\r\n          count: 1\r\n          width: 80\r\n          length: 120\r\n          height: 100\r\n          weight: 90\r\n          contents: \"Pultteja ja muttereita\"\r\n          noStacking: true\r\n          dangerousGoodsItems: [\r\n            {\r\n              shippingName: \"Vaarallista\"\r\n              primaryHazardClass: \"3.1\"\r\n              environmentalHazard: true\r\n              weight: 10\r\n              technicalName: \"Dangerous\"\r\n              type: VAK\r\n              count: 1\r\n              unNumber: \"0123\"\r\n              packagingType: \"Muovipussi\"\r\n              volume: 20\r\n              secondaryHazardClasses: [\"1.4S\", \"8\"]\r\n              packagingGroupCode: \"II\"\r\n              tunnelRestrictionCode: \"B/D\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n      additionalServices: [\r\n        {\r\n          id: \"5100\"\r\n          params: { scheduledDelivery: { deliveryTimeSlotId: \"FROM_9_TO_12\" } }\r\n        }\r\n        {\r\n          id: \"5235\"\r\n          params: { senderPickupContact: { phoneNumber: \"040123123\" } }\r\n        }\r\n        {\r\n          id: \"5103\"\r\n          params: { receiverPickupContact: { phoneNumber: \"040123123\" } }\r\n        }\r\n        {\r\n          id: \"5234\"\r\n          params: { chosenDeliveryDate: { deliveryDate: \"2020-08-14T00:00:00Z\" } }\r\n        }\r\n        {\r\n          id: \"5237\"\r\n          params: {\r\n            specificPickupLocation: {\r\n              instructions: \"Nouto ohje\"\r\n              phoneNumber: \"040123123\"\r\n            }\r\n          }\r\n        }\r\n        {\r\n          id: \"5224\"\r\n          params: {\r\n            specificDeliveryLocation: {\r\n              instructions: \"Nouto ohje\"\r\n              phoneNumber: \"040123123\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n      shippingInstructions: \"Kuljeta heti.\"\r\n      additionalInstructions: \"Lisää tietoa.\"\r\n      requestedPickupDate: \"2020-08-12T07:00:00Z\"\r\n    }\r\n  ) {\r\n    reference\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Queryshipment Order-APIG-FrightShipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8e88c06-9e2c-4c6f-bedd-3cc8382ddb93",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"//pm.environment.set(\"Frightreference\", jsonData.data.placeFreightShipmentOrder.reference);",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"//pm.environment.set(\"tracking_code_lar\", jsonData.data.placeShipmentOrder.trackingCode);",
									"//pm.environment.set(\"reference\" , jsonData.data.placeFreightShipmentOrder.reference);",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"value": "{{role_tokens}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{\r\n  freightShipmentOrder(reference: \"{{reference}}\") {\r\n    reference\r\n    order {\r\n      sender {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        logisticsContractNumber\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      receiver {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      shippingProductId\r\n      shippingUnits {\r\n        shippingUnitTypeCode\r\n        count\r\n        width\r\n        length\r\n        height\r\n        weight\r\n        contents\r\n        noStacking\r\n        dangerousGoodsItems {\r\n          shippingName\r\n          primaryHazardClass\r\n          environmentalHazard\r\n          weight\r\n          technicalName\r\n          type\r\n          count\r\n          unNumber\r\n          packagingType\r\n          volume\r\n          secondaryHazardClasses\r\n          packagingGroupCode\r\n          tunnelRestrictionCode\r\n        }\r\n      }\r\n      additionalServices {\r\n        id\r\n        params {\r\n          scheduledDelivery {\r\n            deliveryTimeSlotId\r\n          }\r\n          senderPickupContact {\r\n            phoneNumber\r\n          }\r\n          receiverPickupContact {\r\n            phoneNumber\r\n          }\r\n          chosenDeliveryDate {\r\n            deliveryDate\r\n          }\r\n          specificPickupLocation {\r\n            instructions\r\n            phoneNumber\r\n          }\r\n          specificDeliveryLocation {\r\n            instructions\r\n            phoneNumber\r\n          }\r\n        }\r\n      }\r\n      shippingInstructions\r\n      additionalInstructions\r\n      requestedPickupDate\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shipment Order-Query -Using Tracking-Largeparcel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3c3dcf6-1e26-4b5e-a29e-fc8f9677897e",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query {\r\n  shipmentOrder(trackingCode: \"{{tracking_code_lar}}\") {\r\n    trackingCode\r\n    order {\r\n      sender {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      receiver {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      deliveryMethod {\r\n        pickupPoint {\r\n          pupCode\r\n        }\r\n        homeDelivery\r\n        mailbox\r\n        postOffice\r\n      }\r\n      additionalServices {\r\n        id\r\n        params {\r\n          cashOnDelivery {\r\n            IBAN\r\n            BIC\r\n            amount\r\n            reference\r\n          }\r\n        }\r\n      }\r\n      specifiedSize {\r\n        height\r\n        length\r\n        weight\r\n        width\r\n      }\r\n      additionalInfo\r\n      infoCode\r\n      returnLabel\r\n      shippingProductId\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shipment Order-Query -Using Tracking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc34078b-4839-42d1-bea8-dbb0cca2bf27",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query {\r\n  shipmentOrder(trackingCode: \"{{tracking_code}}\") {\r\n    trackingCode\r\n    order {\r\n      sender {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      receiver {\r\n        city\r\n        contactName\r\n        contactType\r\n        countryCode\r\n        email\r\n        name\r\n        phoneNumber\r\n        postalCode\r\n        streetAddress\r\n        vatCode\r\n      }\r\n      deliveryMethod {\r\n        pickupPoint {\r\n          pupCode\r\n        }\r\n        homeDelivery\r\n        mailbox\r\n        postOffice\r\n      }\r\n      additionalServices {\r\n        id\r\n        params {\r\n          cashOnDelivery {\r\n            IBAN\r\n            BIC\r\n            amount\r\n            reference\r\n          }\r\n        }\r\n      }\r\n      specifiedSize {\r\n        height\r\n        length\r\n        weight\r\n        width\r\n      }\r\n      additionalInfo\r\n      infoCode\r\n      returnLabel\r\n      shippingProductId\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Print shipping label -Query-APIG",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d3fb2ac-360c-40ea-a439-fa5c1483ca72",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{ shippingLabel(trackingCode:\"{{tracking_code}}\") }",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shipment Option-with-COD-APIG-MeduiumParcel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "324b9575-bd4f-4c1f-9659-d5d6b539fc2b",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\nshipmentOptions(\r\n    selectedShipmentOptions: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n        logisticsContractNumber: \"614546\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n      deliveryMethod: { pickupPoint: { pupCode: \"123\" } }\r\n      additionalServices: [\r\n        { id: \"3147\" }\r\n        {\r\n          id: \"3101\"\r\n          params: {\r\n            cashOnDelivery: {\r\n              amount: 100\r\n              IBAN: \"GB33BUKB20201555555555\"\r\n              BIC: \"OKOYFIHH\"\r\n              name: \"Testi vastaanottaja\"\r\n              reference: \"123456\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n      sizeCategory: MEDIUM\r\n    }\r\n  ) {\r\n    deliveryMethods {\r\n      pickupPoint\r\n      postOffice\r\n      homeDelivery\r\n      mailbox\r\n    }\r\n    additionalServices {\r\n      id\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n      paramsField\r\n    }\r\n    sizeCategories\r\n    returnLabel\r\n    shippingProducts {\r\n      id\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n      title {\r\n        lang\r\n        value\r\n      }\r\n      description {\r\n        lang\r\n        value\r\n      }\r\n    }\r\n    shippingUnitTypes {\r\n      code\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shipment Option-Query-Blancket",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6983e78-3c8b-4c17-a8c6-0abcba624857",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query {\r\n  shipmentOptions(\r\n    selectedShipmentOptions: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n        logisticsContractNumber: \"614546\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n    }\r\n  ) {\r\n    deliveryMethods {\r\n      pickupPoint\r\n      postOffice\r\n      homeDelivery\r\n      mailbox\r\n    }\r\n    additionalServices {\r\n      id\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n      paramsField\r\n    }\r\n    sizeCategories\r\n    returnLabel\r\n    shippingProducts {\r\n      id\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shipment Option-Query-By-ProductID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "385754b5-ad7a-4816-bc7e-b4a826e13e5d",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query {\r\n  shipmentOptions(\r\n    selectedShipmentOptions: {\r\n      sender: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testi Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testikontakti Nimi\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 1\"\r\n        logisticsContractNumber: \"614546\"\r\n      }\r\n      receiver: {\r\n        countryCode: \"FI\"\r\n        vatCode: \"12345\"\r\n        city: \"Helsinki\"\r\n        email: \"test@mail.com\"\r\n        name: \"Testivastaanottaja Nimi\"\r\n        postalCode: \"00220\"\r\n        contactName: \"Testivastaanottaja Kontakti\"\r\n        contactType: CORPORATE\r\n        phoneNumber: \"+358123456780\"\r\n        streetAddress: \"Postintaival 2\"\r\n      }\r\n      shippingProductId: \"902505dc-3409-5cc1-ab73-33fa80585fcd\"\r\n    }\r\n  ) {\r\n    deliveryMethods {\r\n      pickupPoint\r\n      postOffice\r\n      homeDelivery\r\n      mailbox\r\n    }\r\n    additionalServices {\r\n      id\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n      paramsField\r\n    }\r\n    sizeCategories\r\n    returnLabel\r\n    shippingProducts {\r\n      id\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n      title {\r\n        lang\r\n        value\r\n      }\r\n      description {\r\n        lang\r\n        value\r\n      }\r\n    }\r\n    shippingUnitTypes {\r\n      code\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Country list-Options-Query-APIG-Sender",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d66f2e4e-7258-4128-afd5-fef931afc148",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"value": "{{role_tokens}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{\r\n  countries {\r\n    name { lang value }\r\n    countryCode\r\n    iso31662\r\n    alpha2\r\n    alpha3\r\n    corporateSendingSender\r\n    \r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Country list-Options-Query-APIG-Receiver",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d39546c6-0942-4d58-b3c4-8fb965544eeb",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{\r\n  countries {\r\n    name { lang value }\r\n    countryCode\r\n    iso31662\r\n    alpha2\r\n    alpha3\r\n    corporateSendingReceiver\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create-SmartShip_APIKEY-Mutation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd5639d9-98eb-4a97-a58c-f956c3d63d39",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  createSmartShipApiKey(apiKey: \"ABCDEFGHIJLKMNOP-012345678901234567890123\") {\r\n    createdAt\r\n    maskedApiKey\r\n  }\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get-SmartShip_APIKEY-Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cecc4ce6-8230-42f3-91c3-35d05093b031",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"//pm.environment.set(\"Senderid\", jsonData.data.createSenderContact.id);",
									"",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{\r\n  smartShipApiKeyInfo {\r\n    createdAt\r\n    maskedApiKey\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get-SmartShip_APIKEY-ContactList-Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98f07ae1-8ccf-4fab-b48f-32c6c026409c",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"//pm.environment.set(\"Senderid\", jsonData.data.createSenderContact.id);",
									"",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{\r\n  smartShipApiImportPreview {\r\n    totalSenders\r\n    totalReceivers\r\n    previewSenderContacts {\r\n      id\r\n      businessId\r\n      name\r\n      contactName\r\n      streetAddress\r\n      postalCode\r\n      city\r\n      state\r\n      countryCode\r\n      phoneNumber\r\n      email\r\n      doorCode\r\n    }\r\n    previewReceiverContacts {\r\n      id\r\n      businessId\r\n      name\r\n      contactName\r\n      streetAddress\r\n      postalCode\r\n      city\r\n      state\r\n      countryCode\r\n      phoneNumber\r\n      email\r\n      doorCode\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete-SmartShip_APIKEY-Mutation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a31822f-b85d-4191-9cdc-25dea6d758d0",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"//pm.environment.set(\"Senderid\", jsonData.data.createSenderContact.id);",
									"",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  deleteSmartShipApiKey {\r\n    createdAt\r\n    maskedApiKey\r\n  }\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create-contact-APIG-Sender",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dba09008-27b0-45b3-a4ac-623a30bfde2f",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"Senderid\", jsonData.data.createSenderContact.id);",
									"",
									"",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  createSenderContact(contact: {\r\n    logisticsContractNumber: \"628381\", \r\n    businessId:\"2876876-7\",\r\n    name: \"Trysending\",\r\n    contactType: CORPORATE, \r\n    contactName: \"Tester\", \r\n    streetAddress: \"Tietajantie 3B\",\r\n    postalCode: \"02130\",\r\n    state: \"None\",\r\n    city: \"Espoo\",\r\n    email: \"Test@Test.com\",\r\n    phoneNumber: \"+358406768909\",\r\n    doorCode:\"1234\",\r\n    countryCode: \"FI\"}) {id}\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sender Query-APIG-Sender",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67b8144a-3e22-4927-b3e2-a2a96c2a5f35",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{\r\n  senderContact(id: \"{{Senderid}}\")\r\n  {\r\n    city\r\n    postalCode\r\n    phoneNumber\r\n    id\r\n    email\r\n    countryCode\r\n    doorCode\r\n    contactType\r\n    \r\n    contactName\r\n    state\r\n    streetAddress\r\n    businessId\r\n    logisticsContractNumber\r\n  }\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create-Contact-APIG-Receiver",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94fdeac7-6093-4658-8b9e-6944f7828393",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"ReceiverID\", jsonData.data.createReceiverContact.id);",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "mutation {\r\n  createReceiverContact(contact: {\r\n    businessId:\"2876876-7\",\r\n    name: \"TryReceivig\",\r\n    contactType: CORPORATE, \r\n    contactName: \"Receivercontact\", \r\n    streetAddress: \"Tietajantie 4B\",\r\n    postalCode: \"02130\",\r\n    state: \"None\",\r\n    city: \"Espoo\",\r\n    email: \"Test@Receiver.com\",\r\n    phoneNumber: \"+35876567898\",\r\n    doorCode:\"199082\",\r\n    countryCode: \"FI\"}) {id}\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Receiver Query-APIG-Receiver",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2517363-ec52-4ee9-b864-4b65e94638f4",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{\r\n  receiverContact(id:\"{{ReceiverID}}\") {\r\n    city\r\n    postalCode\r\n    phoneNumber\r\n    id\r\n    contactType\r\n    email\r\n    countryCode\r\n    doorCode\r\n    contactType\r\n    contactName\r\n    state\r\n    streetAddress\r\n    businessId\r\n    \r\n  }\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pakettikauppa shipment Options-Query-APIG-Postipkt",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bed51477-abaf-40d3-b8b0-0074e833dde0",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{shipmentOptions(selectedShipmentOptions:\r\n                      {sender: {countryCode: \"FI\",\r\n                                vatCode: \"12345\",\r\n                                city: \"Helsinki\",\r\n                                email: \"test@mail.com\",\r\n                                name: \"Testi Nimi\",\r\n                                postalCode: \"00220\",\r\n                                contactName: \"Testikontakti Nimi\",\r\n                                contactType: CORPORATE,\r\n                                phoneNumber: \"+358123456780\",\r\n                                streetAddress: \"Postintaival 1\"},\r\n                      receiver: {countryCode: \"FI\",\r\n                                 vatCode: \"12345\",\r\n                                 city: \"Helsinki\",\r\n                                 email: \"test@mail.com\",\r\n                                 name: \"Testivastaanottaja Nimi\",\r\n                                 postalCode: \"00220\",\r\n                                 contactName: \"Testivastaanottaja Kontakti\",\r\n                                 contactType: CONSUMER,\r\n                                 phoneNumber: \"+358123456780\",\r\n                                 streetAddress: \"Postintaival 2\"},\r\n                      deliveryMethod: {pickupPoint: {pupCode: \"123\"}},\r\n                      additionalServices: [{id: \"3147\"},\r\n                                           {id: \"3101\",\r\n                                            params: {cashOnDelivery:\r\n                                                     {amount: 100,\r\n                                                      IBAN: \"GB33BUKB20201555555555\",\r\n                                                      BIC: \"OKOYFIHH\",\r\n                                                      name: \"Testi vastaanottaja\",\r\n                                                      reference: \"123456\"}}}],\r\n                      sizeCategory: MEDIUM})\r\n                     {deliveryMethods {pickupPoint postOffice homeDelivery mailbox}\r\n                      additionalServices {id name {lang value} paramsField}\r\n                      sizeCategories returnLabel\r\n                      shippingProducts {id name {lang value}}}}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pakettikauppa shipment Options-Query-APIG-Kotipaketti",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94b5419b-64cc-4c46-8ea7-e3e83d8ef126",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{shipmentOptions(selectedShipmentOptions:\r\n                  {sender: {countryCode: \"FI\",\r\n                            vatCode: \"12345\",\r\n                            city: \"Helsinki\",\r\n                            email: \"test@mail.com\",\r\n                            name: \"Testi Nimi\",\r\n                            postalCode: \"00220\",\r\n                            contactName: \"Testikontakti Nimi\",\r\n                            contactType: CORPORATE,\r\n                            phoneNumber: \"+358123456780\",\r\n                                         streetAddress: \"Postintaival 1\"},\r\n                   receiver: {countryCode: \"FI\",\r\n                              vatCode: \"12345\",\r\n                              city: \"Helsinki\",\r\n                              email: \"test@mail.com\",\r\n                              name: \"Testivastaanottaja Nimi\",\r\n                              postalCode: \"00220\",\r\n                              contactName: \"Testivastaanottaja Kontakti\",\r\n                              contactType: CONSUMER,\r\n                              phoneNumber: \"+358123456780\",\r\n                                           streetAddress: \"Postintaival 2\"},\r\n                 \r\n                   \r\n                 sizeCategory: MEDIUM })\r\n  {deliveryMethods {pickupPoint postOffice homeDelivery mailbox}\r\n                      additionalServices {id name {lang value} paramsField}\r\n                      sizeCategories returnLabel\r\n                      shippingProducts {id name {lang value}}}}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pakettikauppa shipment Options-Query-APIG-Kotipaketti-Fi Consumer Receiver",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dab55a7f-79c9-4bfe-bb8a-1b32a0ea02cf",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{shipmentOptions(selectedShipmentOptions:\r\n                      {sender: {countryCode: \"FI\",\r\n                                vatCode: \"12345\",\r\n                                city: \"Helsinki\",\r\n                                email: \"test@mail.com\",\r\n                                name: \"Testi Nimi\",\r\n                                postalCode: \"00220\",\r\n                                contactName: \"Testikontakti Nimi\",\r\n                                contactType: CORPORATE,\r\n                                phoneNumber: \"+358123456780\",\r\n                                streetAddress: \"Postintaival 1\",\r\n                                logisticsContractNumber: \"614546\"},\r\n                      receiver: {countryCode: \"FI\",\r\n                                 vatCode: \"12345\",\r\n                                 city: \"Helsinki\",\r\n                                 email: \"test@mail.com\",\r\n                                 name: \"Testivastaanottaja Nimi\",\r\n                                 postalCode: \"00220\",\r\n                                 contactName: \"Testivastaanottaja Kontakti\",\r\n                                 contactType: CONSUMER,\r\n                                 phoneNumber: \"+358123456780\",\r\n                                 streetAddress: \"Postintaival 2\"}})\r\n                     {deliveryMethods {pickupPoint postOffice homeDelivery mailbox}\r\n                      additionalServices {id name {lang value} paramsField}\r\n                      sizeCategories returnLabel\r\n                      shippingProducts {id name {lang value}}}}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pakettikauppa shipment Options-Query-APIG-All products",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65921596-3583-4750-a824-46ac6257ca32",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{shipmentOptions(selectedShipmentOptions: {})\r\n     {deliveryMethods {pickupPoint postOffice homeDelivery mailbox}\r\n                      additionalServices {id name {lang value} paramsField}\r\n                      sizeCategories returnLabel\r\n                      shippingProducts {id name {lang value}}}}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "shipment Options-Query-APIG- Shipping-products -additional fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd64e24c-8fff-45a0-beb4-645fb6ebb92a",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{shipmentOptions(selectedShipmentOptions: {})\r\n     {deliveryMethods {pickupPoint postOffice homeDelivery mailbox}\r\n                      additionalServices {id name {lang value} paramsField}\r\n                      sizeCategories returnLabel\r\n                      shippingProducts {\r\n      id\r\n      name {\r\n        lang\r\n        value\r\n      }\r\n      title {\r\n        lang\r\n        value\r\n      }\r\n      description {\r\n        lang\r\n        value\r\n      }\r\n    } }}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pakettikauppa shipment Options-Query-APIG-FI Consumer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50c9d31e-2217-45fa-9330-9e40ecb2bb92",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/graphql"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "query{shipmentOptions(selectedShipmentOptions:\r\n                      {sender: {countryCode: \"FI\",\r\n                                vatCode: \"12345\",\r\n                                city: \"Helsinki\",\r\n                                email: \"test@mail.com\",\r\n                                name: \"Testi Nimi\",\r\n                                postalCode: \"00220\",\r\n                                contactName: \"Testikontakti Nimi\",\r\n                                contactType: CORPORATE,\r\n                                phoneNumber: \"+358123456780\",\r\n                                streetAddress: \"Postintaival 1\"},\r\n                      receiver: {countryCode: \"FI\",\r\n                                 vatCode: \"12345\",\r\n                                 city: \"Helsinki\",\r\n                                 email: \"test@mail.com\",\r\n                                 name: \"Testivastaanottaja Nimi\",\r\n                                 postalCode: \"00220\",\r\n                                 contactName: \"Testivastaanottaja Kontakti\",\r\n                                 contactType: CONSUMER,\r\n                                 phoneNumber: \"+358123456780\",\r\n                                 streetAddress: \"Postintaival 2\"}})\r\n                     {deliveryMethods {pickupPoint postOffice homeDelivery mailbox}\r\n                      additionalServices {id name {lang value} paramsField}\r\n                      sizeCategories returnLabel\r\n                      shippingProducts {id name {lang value}}}}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{DEV_URL}}/graphql",
							"host": [
								"{{DEV_URL}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Addressbook-Standalone-APis",
			"item": [
				{
					"name": "Addressbook Service Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adabac08-3a0b-452c-ab59-e98cc2e63abc",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"user\":\"{{user}}\", \"password\":\"{{password}}\"}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/health",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search contact Sendercontact-All-Addressbook",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "975bf1b2-5643-4cf8-b592-2cd5db98c401",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5fa2ba3c-7a2a-4068-bd11-81b3ff2d0391",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/sender_contact",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"sender_contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search contact Receivercontact-All-Addressbook",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5673e85-4494-488b-926f-f02827a06b10",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c044cda7-ebf5-4fd7-b573-7ad49cd95239",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"value": "{{role_tokens}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/receiver_contact",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"receiver_contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Addressbook create Sender contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bd36697-987a-41d7-8328-639d3c718412",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Senderid\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"value": "{{Createrid}}",
								"type": "text"
							},
							{
								"key": "x-omaposti-roles",
								"value": "{{role_tokens}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"logisticsContractNumber\": \"628381\",\r\n  \"business_id\": \"2876876-7\",\r\n  \"name\": \"Sender2\",\r\n  \"contact_type\": \"CORPORATE\",\r\n  \"contact_name\": \"Omaposti Test1\",\r\n  \"street_address\": \"Stenbackenkatu 1 B\",\r\n  \"postal_code\": \"00250\",\r\n  \"city\": \"Helsinki\",\r\n  \"state\": \"None\",\r\n  \"country_code\": \"FI\",\r\n  \"phone_number\": \"+358413601090\",\r\n  \"email\": \"omapostipro@gmail.com\",\r\n  \"door_code\": \"0311\"\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/sender_contact",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"sender_contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Sender-contact-by-Id -Addressbook",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3651f0e8-e7bc-4ea0-ae1f-ecb7350bdc51",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "37f99cc4-c3ef-4994-aaf2-70e69195a740",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/sender_contact/{{Senderid}}",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"sender_contact",
								"{{Senderid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Addressbook Update Sender contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f455b670-7cb2-489b-a7e1-5c625c6df2fb",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"//postman.setEnvironmentVariable(\"id\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"logisticsContractNumber\": \"628381\",\r\n  \"business_id\": \"2876876-7\",\r\n  \"name\": \"Sender2\",\r\n  \"contact_type\": \"CORPORATE\",\r\n  \"contact_name\": \"Omaposti Test1\",\r\n  \"street_address\": \"Stenbackenkatu 1 B\",\r\n  \"postal_code\": \"00251\",\r\n  \"city\": \"Helsinki\",\r\n  \"state\": \"None\",\r\n  \"country_code\": \"FI\",\r\n  \"phone_number\": \"+358413601090\",\r\n  \"email\": \"omapostipro@gmail.com\",\r\n  \"door_code\": \"0311\"\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/sender_contact/{{Senderid}}",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"sender_contact",
								"{{Senderid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Addressbook Delete Sender contact by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abaf4a38-7d2a-4169-993c-56802453e7a5",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "owner-id",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"value": "{{role_tokens}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/sender_contact/{{Senderid}}",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"sender_contact",
								"{{Senderid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Addressbook create Receiver contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4c40e37-21ab-413c-b463-d5599acf8f25",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ReceiverID\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"business_id\": \"2876876-7\",\r\n  \"name\": \"TryReceiving\",\r\n  \"contact_type\": \"CORPORATE\",\r\n  \"contact_name\": \"Omaposti Test Receiver\",\r\n  \"street_address\": \"Espoo Tapiola 1 B\",\r\n  \"postal_code\": \"00210\",\r\n  \"city\": \"ESPOO\",\r\n  \"state\": \"None\",\r\n  \"country_code\": \"FI\",\r\n  \"phone_number\": \"+358413601091\",\r\n  \"email\": \"Test@Receiver.com\",\r\n  \"door_code\": \"0311\"\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/receiver_contact",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"receiver_contact"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Receiver-contact-by-Id -Addressbook",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c1299f2-a1fb-40fa-8ea1-128da95059cb",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "41b649a6-f29a-49ba-8696-177af9e64850",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/receiver_contact/{{ReceiverID}}",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"receiver_contact",
								"{{ReceiverID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Addressbook Update Receiver contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "817149c5-96d4-4d42-bf6a-e205cc1212af",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"//postman.setEnvironmentVariable(\"id\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"business_id\": \"2876876-7\",\r\n  \"name\": \"TryReceiving\",\r\n  \"contact_type\": \"CORPORATE\",\r\n  \"contact_name\": \"Omaposti Test Receiver\",\r\n  \"street_address\": \"Espoo Tapiola 1 B\",\r\n  \"postal_code\": \"00210\",\r\n  \"city\": \"ESPOO\",\r\n  \"state\": \"None\",\r\n  \"country_code\": \"FI\",\r\n  \"phone_number\": \"+358413601091\",\r\n  \"email\": \"Test@Receiver.com\",\r\n  \"door_code\": \"0311\"\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/receiver_contact/{{ReceiverID}}",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"receiver_contact",
								"{{ReceiverID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Addressbook Delete Receiver contact by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3add83bc-a2c0-4f38-8728-f5d11c33cd05",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "owner-id",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/receiver_contact/{{ReceiverID}}",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"receiver_contact",
								"{{ReceiverID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Smartship API-KEY",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b42edf99-a3e2-4959-8d8c-717495c63ff7",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"UUID\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}",
								"disabled": true
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"api_key\": \"ABCDEFGHIJK-123456\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/smartship/api_key",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"smartship",
								"api_key"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Smartship-Import-Selected",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea8e20e0-752f-4131-9abf-5100331feb74",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"UUID\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}",
								"disabled": true
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sender_ids\": [\r\n    \"{{Senderid}}\"\r\n  ],\r\n  \"receiver_ids\": [\r\n    \"{{ReceiverID}}\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/smartship/import_selected",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"smartship",
								"import_selected"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Smartship-Import-All",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57201ade-3074-49fc-9fb3-d23a9ed23e92",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"UUID\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}",
								"disabled": true
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sender_ids\": [\r\n    \"{{Senderid}}\"\r\n  ],\r\n  \"receiver_ids\": [\r\n    \"{{ReceiverID}}\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/smartship/import_all",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"smartship",
								"import_all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Smartship API-KEY",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e70dc74-17f4-48f2-a52c-6d1556d73a15",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"UUID\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"api_Key\": \"ABCDEFGHIJLKMNOP012345678901234567890123\"\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/smartship/api_key",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"smartship",
								"api_key"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Smartship-contactsPreview",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9442727-52a8-4ae8-8289-19ad91d5eca1",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"UUID\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"api_Key\": \"ABCDEFGHIJLKMNOP012345678901234567890123\"\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/smartship/preview",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"smartship",
								"preview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Smartship API-KEY",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec7061e8-b307-42c7-8b17-947347a9c361",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"//postman.setEnvironmentVariable(\"UUID\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"api_Key\": \"ABCDEFGHIJLKMNOP-012345678901234567890123\"\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/smartship/api_key",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"smartship",
								"api_key"
							]
						}
					},
					"response": []
				},
				{
					"name": "Addressbook Smartship upload-notworking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48108754-63b5-4e31-b0b9-0e9ff149b366",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"UUID\" ,  jsonData.id);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200,422]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "multipart/form-data; boundary=----WebKitFormBoundarycdESKL0t9AUmf3Ay"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "created-by",
								"type": "text",
								"value": "{{Createrid}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/C:/Users/mishrsu1/Downloads/Sender-latest.txt"
							},
							"options": {
								"file": {}
							}
						},
						"url": {
							"raw": "{{BaseurlAddressbook}}/api/v1/smartship/upload",
							"host": [
								"{{BaseurlAddressbook}}"
							],
							"path": [
								"api",
								"v1",
								"smartship",
								"upload"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Python-Backend-Standalone-Apis",
			"item": [
				{
					"name": "Check-Health-of-System-Pythonbackend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a8a5f64-dbd3-455f-b471-4c3794a97e17",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/health",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch-CountryList-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc45f6af-0c65-4a2f-b60a-08ce71aff8fa",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "x-omaposti-roles",
								"value": "{{role_tokens}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/countries",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"countries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch-Feed-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f6668d9-f093-4232-9ba8-b3d65164840f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/feed",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"feed"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch-DeliveryTimeEstimate-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b984b077-9b07-4a03-b07e-c27c90ea7892",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/shipping/delivery-time-estimate?from_postal_code=02130&to_postal_code=00100&product_id=c77f57ea-b852-5717-8f48-8ef3d3caff0e&tracking_code={{tracking_code}}",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"shipping",
								"delivery-time-estimate"
							],
							"query": [
								{
									"key": "from_postal_code",
									"value": "02130"
								},
								{
									"key": "to_postal_code",
									"value": "00100"
								},
								{
									"key": "product_id",
									"value": "c77f57ea-b852-5717-8f48-8ef3d3caff0e"
								},
								{
									"key": "tracking_code",
									"value": "{{tracking_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateFrightShipment-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c62716a8-3fc9-400b-8d9c-c7b3f4c22907",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"reference\", jsonData.reference);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sender\": {\r\n    \"logistics_contract_number\": \"613601\",\r\n    \"contact_type\": \"CORPORATE\",\r\n    \"vat_code\": \"12345\",\r\n    \"name\": \"Testi Nimi\",\r\n    \"street_address\": \"Postintaival 1\",\r\n    \"phone_number\": \"+3587899878\",\r\n    \"email\": \"Test@snder.com\",\r\n    \"contact_name\": \"Testikontakti Nimi\",\r\n    \"postal_code\": \"00220\",\r\n    \"city\": \"Helsinki\",\r\n    \"country_code\": \"FI\"\r\n  },\r\n  \"shipping_product_id\": \"39729232-15b3-4ca3-91c4-cac2e9acd319\",\r\n  \"receiver\": {\r\n    \"contact_type\": \"CONSUMER\",\r\n    \"vat_code\": \"12345\",\r\n    \"name\": \"Receiver\",\r\n    \"street_address\": \"Espoonlahti 2\",\r\n    \"phone_number\": \"+358123456\",\r\n    \"email\": \"Abc@rec.com\",\r\n    \"contact_name\": \"Receiver contact\",\r\n    \"postal_code\": \"02130\",\r\n    \"city\": \"Espoo\",\r\n    \"country_code\": \"FI\"\r\n  },\r\n  \"additional_services\": [],\r\n  \"shipping_units\": [],\r\n  \"requested_pickup_date\": \"2020-08-19T08:27:00.856Z\",\r\n  \"additional_instructions\": \"Kuljeta heti.\",\r\n  \"shipping_instructions\": \"Lisää tietoa.\"\r\n  }\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/shipping/freight-shipment-order",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"shipping",
								"freight-shipment-order"
							]
						}
					},
					"response": []
				},
				{
					"name": "QueryFright-ShipmentByRef-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09f0ab4e-0369-4de9-a6e8-931adf71ed50",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/shipping/freight-shipment-order/{{reference}}",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"shipping",
								"freight-shipment-order",
								"{{reference}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateShipment-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5414718-d683-48ab-8558-5006d1a61707",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"reference\", jsonData.reference);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sender\": {\r\n    \"logistics_contract_number\": \"613601\",\r\n    \"contact_type\": \"CORPORATE\",\r\n    \"vat_code\": \"12345\",\r\n    \"name\": \"Testi Nimi\",\r\n    \"street_address\": \"Postintaival 1\",\r\n    \"phone_number\": \"+3587899878\",\r\n    \"email\": \"Test@snder.com\",\r\n    \"contact_name\": \"Testikontakti Nimi\",\r\n    \"postal_code\": \"00220\",\r\n    \"city\": \"Helsinki\",\r\n    \"country_code\": \"FI\"\r\n  },\r\n  \"shipping_product_id\": \"c77f57ea-b852-5717-8f48-8ef3d3caff0e\",\r\n  \"receiver\": {\r\n    \"contact_type\": \"CONSUMER\",\r\n    \"vat_code\": \"12345\",\r\n    \"name\": \"Receiver\",\r\n    \"street_address\": \"Espoonlahti 2\",\r\n    \"phone_number\": \"+358123456\",\r\n    \"email\": \"Abc@rec.com\",\r\n    \"contact_name\": \"Receiver contact\",\r\n    \"postal_code\": \"02130\",\r\n    \"city\": \"Espoo\",\r\n    \"country_code\": \"FI\"\r\n  },\r\n  \"additional_services\": [],\r\n  \"requested_pickup_date\": \"2020-08-19T08:27:00.856Z\",\r\n  \"additional_instructions\": \"Kuljeta heti.\",\r\n  \"shipping_instructions\": \"Lisää tietoa.\"\r\n  }\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/shipping/freight-shipment-order",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"shipping",
								"freight-shipment-order"
							]
						}
					},
					"response": []
				},
				{
					"name": "QueryShipmentByRef-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0a3abc2-99e4-4d39-9b9a-dd17490d7d3a",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/shipping/shipment-order/{{tracking_code}}",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"shipping",
								"shipment-order",
								"{{tracking_code}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ShipmentOptions-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8317a03-40c3-49ff-a914-0b9362dd2654",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"pm.environment.set(\"authorization\", 'Bearer ' + jsonData);",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"reference\", jsonData.reference);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sender\": {\r\n    \"contact_type\": \"CORPORATE\",\r\n    \"vat_code\": \"12345\",\r\n    \"name\": \"Sender\",\r\n    \"street_address\": \"Espoonlahati\",\r\n    \"phone_number\": \"+358290989\",\r\n    \"email\": \"Test@tes.com\",\r\n    \"contact_name\": \"Sender\",\r\n    \"postal_code\": \"02130\",\r\n    \"logistics_contract_number\": \"613601\",\r\n    \"city\": \"Espoo\",\r\n    \"country_code\": \"FI\"\r\n  },\r\n  \"additional_services\": [],\r\n  \"shipping_product_id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n  \"receiver\": {\r\n    \"contact_type\": \"CORPORATE\",\r\n    \"vat_code\": \"12345\",\r\n    \"name\": \"Receiver\",\r\n    \"street_address\": \"Helsinkinkatu 3\",\r\n    \"phone_number\": \"+358765567\",\r\n    \"email\": \"Receiver@test.com\",\r\n    \"contact_name\": \"Receiver contact\",\r\n    \"postal_code\": \"00120\",\r\n    \"city\": \"Helsinki\",\r\n    \"country_code\": \"FI\"\r\n  },\r\n  \"delivery_method\": {\r\n    \"home_delivery\": false,\r\n    \"post_office\": false,\r\n    \"pickup_point\": {\r\n      \"pup_code\": \"123\"\r\n    },\r\n    \"mailbox\": false\r\n  },\r\n  \"size_category\": \"MEDIUM\",\r\n  \"specified_size\": {\r\n    \"width\": 0,\r\n    \"weight\": 0,\r\n    \"height\": 0,\r\n    \"length\": 0\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/shipping/shipment-options",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"shipping",
								"shipment-options"
							]
						}
					},
					"response": []
				},
				{
					"name": "PrintAddressLabel-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6dfc6671-cb01-40a8-a12f-8c5c17f0d28f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"JVBERi0xL\");",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});",
									"});",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"tracking_code\": \"{{tracking_code}}\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/shipping/shipping-label",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"shipping",
								"shipping-label"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReportingData-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71db7fab-d0e5-442f-b2dc-e14bf3353e02",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ovt\");",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});",
									"});",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ovt\": \"FI28768767\",\r\n  \"months\": [\r\n    \"202007\"\r\n  ],\r\n  \"keyMetrics\": [],\r\n  \"chartData\": [],\r\n  \"rawBillingData\": [],\r\n  \"petsStatistic\": []\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/reports/reporting_data",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"reporting_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReportingData-Python-backend -2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d2c49c3-c311-4ba1-a878-7084c66675ba",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ovt\");",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});",
									"});",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ovt\": \"FI28768767\",\r\n    \"months\": [\r\n        \"201910\",\r\n        \"201911\",\r\n        \"201912\"\r\n    ],\r\n    \"keyMetrics\": [\r\n        \"amountAvg\",\r\n        \"priceAvg\",\r\n        \"weightAvg\",\r\n        \"monthlyBilledAverage\",\r\n        \"pricePerKgAvg\"\r\n    ],\r\n    \"chartData\": [\r\n        {\r\n            \"key\": [\r\n                \"productName\",\r\n                \"parcelType\"\r\n            ],\r\n            \"value\": \"quantity\"\r\n        },\r\n        {\r\n            \"key\": [\r\n                \"billingId\"\r\n            ],\r\n            \"value\": \"totalPriceVat\"\r\n        }\r\n    ],\r\n    \"rawBillingData\": [\r\n        \"billingId\",\r\n        \"totalPrice\",\r\n        \"trackingCode\"\r\n    ],\r\n    \"petsStatistic\": [\r\n        \"pickupPointDistribution\",\r\n        \"postalCodeDistribution\"\r\n    ]\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/reports/reporting_data",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"reporting_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "InvoiceRowSearch-Python-backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfcce149-496b-4355-af6a-e7f88a4416a6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"JVBERi0xL\");",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});",
									"});",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ovt\": \"FI28768767\",\r\n  \"page\": 0,\r\n  \"invoicePattern\": \"\",\r\n  \"trackingCodePattern\": \"{{tracking_code}}\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/api/v1/reports/invoice_row_search",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"reports",
								"invoice_row_search"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Extra-LC-Number-User-Association-Details-Posti.fi",
			"item": [
				{
					"name": "DIrect AUTH using -posti-testi.fi",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61dfed5a-788a-4836-99a5-4144eba6d3e5",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "username",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{Posti-Fi-Api}}/api/organizations/{{Companycode}}/attributes",
							"host": [
								"{{Posti-Fi-Api}}"
							],
							"path": [
								"api",
								"organizations",
								"{{Companycode}}",
								"attributes"
							]
						}
					},
					"response": []
				},
				{
					"name": "DIrect AUTH using -posti-testi.fi get roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "900b6396-d14d-4d02-9d55-470d51a5190f",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "username",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{Posti-Fi-Api}}/api/organizations/{{Companycode}}/organization-roles",
							"host": [
								"{{Posti-Fi-Api}}"
							],
							"path": [
								"api",
								"organizations",
								"{{Companycode}}",
								"organization-roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get-LC-CN-using -posti-testi.fi-Test-User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ba81551-f652-4580-8017-b6fc3b458a5f",
								"exec": [
									"//These validations are used for testing response",
									"//Globlal variables used here are passed to other scripts ",
									"//Developed By *****Subrat.mishra@posti.com******* For Corporate sending",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    console.log(\"Actual status code: \" + pm.response.code);",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is not empty\", function () {",
									"    console.log(\"Actual token: \" + jsonData);",
									"    pm.expect(jsonData).not.eql(null);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.environment.set(\"plainToken\", jsonData);",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "username",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{id_token}}"
							},
							{
								"key": "Content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-omaposti-roles",
								"type": "text",
								"value": "{{role_tokens}}"
							}
						],
						"url": {
							"raw": "{{Posti-Fi-Api}}/api/organizations/{{Companycode}}/user/{{AccountId}}",
							"host": [
								"{{Posti-Fi-Api}}"
							],
							"path": [
								"api",
								"organizations",
								"{{Companycode}}",
								"user",
								"{{AccountId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ad7d0ab8-b2e8-46dc-9212-48c59c193b0b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "30e0e5d1-8bc7-4c74-b555-24258c2f776d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}